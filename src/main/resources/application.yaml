spring:
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    datasource:
      names: node1,node2,node3
      node1:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/es?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
        username: ysl
        password: ysl123456
      node2:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/es_b?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
        username: ysl
        password: ysl123456
      node3:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/global_transaction?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
        username: ysl
        password: ysl123456
    sharding:
      tables:
        es_mapping:
          database-strategy:
            complex:
              sharding-columns: doc_id,index_name
              algorithm-class-name: com.utils.ShardingAlgorithm
          actual-data-nodes: node$->{1..2}.es_mapping
        global_transaction:
          actual-data-nodes: node3.global_transaction
    props:
      sql:
        show: false
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      transaction-id-prefix: tran.
    consumer:
      bootstrap-servers: localhost:9092
      auto-offset-reset: earliest
      enable-auto-commit: false
    listener:
      ack-mode: manual
mybatis:
  mapper-locations: classpath*:mapper/*.xml
app:
  isolation: serialize
  strategy: percolatorHandler
  test: true
